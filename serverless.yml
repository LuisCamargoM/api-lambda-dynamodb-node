service: api-lambda-dynamodb-node

custom:
  settings:
    POSTS_TABLE: users

provider:
  name: aws
  runtime: nodejs12.x #sempre colocar neste formato para não dar problema de versão na aws
  region: sa-east-1
  environment: ${self:custom.settings}
  iamRoleStatements:
   - Effect: "Allow"
     Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
     Resource:
      - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.POSTS_TABLE}"

functions:
  createUser:
    handler: handler.createUser
    events:
    - http:
        path: /user
        method: post
  getAllUsers:
    handler: handler.getAllUsers
    events:
    - http:
        path: /users
        method: get
  getUsers:
    handler: handler.getUsers
    events:
    - http:
        path: /users/{number}
        method: get
  getUser:
    handler: handler.getUser
    events:
    - http:
        path: /user/{id}
        method: get
  updateUser:
    handler: handler.updateUser
    events:
    - http:
        path: /user/{id}
        method: put
  deleteUser:
    handler: handler.deleteUser
    events:
    - http:
        path: /user/{id}
        method: delete

resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.POSTS_TABLE}
